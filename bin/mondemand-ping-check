#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;

my $confdir = "/etc/mondemand/ping_checks";
opendir (DIR, $confdir) || die "can't opendir $confdir: $!";
my @ping_hosts = grep { ! /^\./ && -f "$confdir/$_" } readdir (DIR);
closedir DIR;

my $prog_id_opt = "pinger";
my $dry_run_opt = 0;
my $help_opt = 0;

GetOptions ("prog_id=s"    => \$prog_id_opt,
            "dry-run|n"    => \$dry_run_opt,
            'help'         => \$help_opt) or pod2usage (1);
pod2usage (1) if ($help_opt);

my $ping_hosts = join (" ",@ping_hosts);
my $fping_args = "-a -C 55 $ping_hosts 2>&1";
my $fping_out = `/usr/sbin/fping $fping_args`;

foreach my $line (split /\n/, $fping_out)
  {
    chomp $line;
    my ($to, $times) = split /:/, $line;
    if ($to =~ m/^([^\.]*)/)
      {
        $to = $1;
      }
    $times =~ s/^\s*//g;
    $times =~ s/\s*$//g;
    my @times = split /\s+/, $times;
    my $min   = 3000000;
    my $max   = 0;
    my $avg   = 0.0;
    my $sum   = 0;
    my $count = 0;
    my $error = 0;
    foreach my $time (@times)
      {
        if ($time ne "-")
          {
            $count++;
            $min = ($time < $min) ? $time : $min;
            $max = ($time > $max) ? $time : $max;
            $sum += $time;
          }
        else
          {
            $error++;
          }
      }
    $avg = $sum / $count;
    my $args = "-p $prog_id_opt "
              ."-o ".read_mondemand_config()." "
              ."-c ".host_context()." "
              ."-s gauge:min_ping_to_$to:".int($min*1000)." "
              ."-s gauge:max_ping_to_$to:".int($max*1000)." "
              ."-s gauge:avg_ping_to_$to:".int($avg*1000)." "
              ."-s gauge:sum_ping_to_$to:".int($sum*1000)." "
              ."-s gauge:tot_ping_to_$to:".$count." "
              ."-s gauge:err_ping_to_$to:".$error." ";
    my $cmd = "mondemand-tool $args";

    if ($dry_run_opt) {
      print "$cmd\n";
    } else {
      system $cmd;
    }
  }

sub read_mondemand_config {
  my $file = "/etc/mondemand/mondemand.conf";
  my ($addr, $port, $ttl);
  open (my $fh, "<", $file ) or die "can't open : $!";
  while (my $line = <$fh>) {
    chomp $line;
    if ($line =~ m/MONDEMAND_ADDR="([0-9\.]+)"/) {
      $addr = $1;
    } elsif ($line =~ m/MONDEMAND_PORT="([0-9]+)"/) {
      $port = $1;
    } elsif ($line =~ m/MONDEMAND_TTL="([0-9]+)"/) {
      $ttl = $1;
    }
  }
  close ($fh);
  die "can't parse : $!" if (! defined $addr and ! defined $port);
  if (defined $ttl) {
    return "lwes::$addr:$port:$ttl";
  } else {
    return "lwes::$addr:$port";
  }
}

sub host_context {
  my $host=`hostname -s`;
  chomp $host;
  return "host:$host";
}

0;

__END__

=head1 NAME

mondemand-ping-check - ping various hosts and send results via mondemand

=head1 SYNOPSIS

mondemand-ping-check [options]

 Options:
   -prog_id   <program_id>

=head1 OPTIONS

=over 8

=item B<-prog_id>

Passed through to mondemand

=back

=head1 DESCRIPTION

=cut
