#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;

my $prog_id_opt = undef;
my $dry_run_opt = 0;
my $help_opt = 0;

GetOptions (
            "prog_id=s"    => \$prog_id_opt,
            "dry-run|n"    => \$dry_run_opt,
            'help'         => \$help_opt) or pod2usage (1);
pod2usage (1) if ($help_opt);

unless (defined ($prog_id_opt))
  {
    print STDERR "ERROR: prog id must be defined use '--prog_id'\n";
    exit 1;
  }

my @lines=`cat /proc/net/snmp`;
my @keys;
my @vals;
my $first = 1;
foreach my $line (@lines) {
  next if $line !~ m/^Udp:/;
  chomp $line;
  if ($first) {
    @keys = split ('\s',$line);
    $first = 0;
  } else {
    @vals = split ('\s',$line);
  }
}
my $stats = "";
for (my $i = 1 ; $i < scalar @keys; $i++) {
  $stats .= "-s ".join(":",("counter",$keys[$i], $vals[$i]))." ";
}

my $args = "-p $prog_id_opt "
          ."-o ".read_mondemand_config()." "
          ."-c ".host_context()." "
          .$stats;

my $cmd = "mondemand-tool $args";

if ($dry_run_opt) {
  print "$cmd\n";
} else {
  system $cmd;
}

sub read_mondemand_config {
  my $file = "/etc/mondemand/mondemand.conf";
  my ($addr, $port, $ttl);
  open (my $fh, "<", $file ) or die "can't open : $!";
  while (my $line = <$fh>) {
    chomp $line;
    if ($line =~ m/MONDEMAND_ADDR="([0-9\.]+)"/) {
      $addr = $1;
    } elsif ($line =~ m/MONDEMAND_PORT="([0-9]+)"/) {
      $port = $1;
    } elsif ($line =~ m/MONDEMAND_TTL="([0-9]+)"/) {
      $ttl = $1;
    }
  }
  close ($fh);
  die "can't parse : $!" if (! defined $addr and ! defined $port);
  if (defined $ttl) {
    return "lwes::$addr:$port:$ttl";
  } else {
    return "lwes::$addr:$port";
  }
}

sub host_context {
  my $host=`hostname -s`;
  chomp $host;
  return "host:$host";
}

0;
